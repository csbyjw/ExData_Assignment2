x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[!c(2, 10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
ames(vect2) <- c("foo", "bar", "norf")
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
myVector <- 1:20
myVector
dim(myVector)
length(myVector)
dim(myVector) <- c(4,5)
dim(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix <- myVector
?matrix()
?matrix
myMatrix2 <- matrix(1:20,nrow=4,ncol=5)
identicl(myMatrix,myMatrix2)
identical(myMatrix,myMatrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,myMatrix)
myData <- data.frame(patients, myMatrix)
myData
class(myData)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
?colnames
colnames(myData) <- cnames
myData
library(datasets)
data(iris)
?iris
iris
?tapply
tapply(iris,"Species",mean)
?split
tapply(iris,"Sepal.Length",mean)
?tapply
tapply("iris$Sepal.Length","Species",mean)
tapply("iris$Sepal.Length","iris$Species",mean)
?mapply
mapply(mean,"iris$Sepal.Length","iris$Species")
x <- "iris$Species"
x
dim(iris)
d <- dim(iris)
d
iris.Species
iris$Species
unique(iris$Species)
?tapply
tapply(iris$Sepal.Length,iris$Species,mean)
apply(iris[, 1:4], 1, mean)
colMeans(iris)
apply(iris, 1, mean)
apply(iris[, 1:4], 2, mean)
tapply(iris$Sepal.Length,iris$Species,mean)
tapply(iris$Sepal.Length,iris$Species,sum)
tapply(iris$Sepal.Length,iris$Species,rnum)
tapply(iris$Sepal.Length,iris$Species,nrow)
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
tapply(abs(mtcars$hp), mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, abs(mean)
tapply(mtcars$hp, mtcars$cyl, abs(mean))
tapply(mtcars$hp, mtcars$cyl, abs(mean))
tapply(abs(mtcars$hp), mtcars$cyl, mean)
abs(82.63636)
a <- tapply(abs(mtcars$hp), mtcars$cyl, mean)
a
a[1]
a[3]
a[1] - a[3]
abs(a[1]-a[3])
View(mtcars)
clone https://github.com/csbyjw/ProgrammingAssignment2
clone github " https://github.com/csbyjw/ProgrammingAssignment2 "
clone github "https://github.com/csbyjw/ProgrammingAssignment2"
?clone github
?git
git clone "https://github.com/csbyjw/ProgrammingAssignment2"
source('~/cachematrix.R')
source('~/cachematrix.R')
source('~/cachematrix.R')
makeCacheMatrix(12)
source('~/cachematrix.R')
source('~/cachematrix.R')
source('~/cachematrix.R')
source('~/cachematrix.R')
source('~/cachematrix.R')
set.seed(1)
rpois(5, 2)
?dpois
?qpois
?rpois
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
str(y)
y
x
e
?rpois
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
install.packages("knitr")
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
newFile
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
a
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
a
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
a
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
a
str(a)
summary(a)
sum(a)
colSum(a)
table(a)
str(a)
a
a[1:5,]
sum(a$1)
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
myfile
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
str(myfile)
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
table(myfile$ARC==3)
table(myfile$ARC==3)
table(myfile$ARC)
table(myfile$ARC,)
table(myfile$ARC==3,)
myfile
myFile[myFile$ARC==3,]
myfile[myfile$ARC==3,]
myfile[myfile$ARC==3]
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
mydf
str(mydf)
mydf[mydf$ARC==3,]
summary(mydf)
summary(mydf$ARC)
str(mydf)
summary(mydf$ACR)
table(mydf$ACR)
table(mydf$ACR==3)
a <- mydf[mydf$ACR==3,]
a
mydf[mydf$ACR==3,]
mydf[which(mydf$ACR==3 & mydf$AGS==6),]
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
a
a[1:3,]
install.packages("jpeg")
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
object.size(mydf)
object.size(a)
print(object.size(mydf),units="Mb")
print(object.size(mydf),units="Gb")
print(object.size(mydf),units="Tb")
print(object.size(mydf),units="Kb")
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
install.packages("plyr")
jpeg?
adf
?jpeg
readJPEG?
adf
readJPEG()?
a
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg")
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
library(jpeg)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
newFile <- "./getdata-jeff.jpg"
download.file(fileURL,destfile=newFile,method="curl")
img <- readJPEG(system.file("img", "Rlogo.jpg", package="jpeg"))
img
a <- readJPEG(newfile,native=FALSE)
a <- readJPEG(newfile,native=TRUE)
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
View(myfile1)
View(mergedmyfile)
class(mergedmyfile)
mergedmyfile[,X.1]
mergedmyfile[,"X.1"]
a <- order(mergedmyfile[,"X.1"])
a
a <- mergedmyfile[order(mergedmyfile[,"X.1"]),]
a
a[1:13,]
View(mergedmyfile)
View(myfile1)
a
a <- mergedmyfile[order(mergedmyfile[,"X.1"]),]
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
View(mergedmyfile)
order?
fdgs
order()?
df
'?order'
?order
a <- mergedmyfile[order(mergedmyfile[,"X.1"],na.last=TRUE),]
A
a
View(a)
str(a)
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
View(a)
mergedmyfile$test <- as.numeric(mergedmyfile[,"X.1"])
View(mergedmyfile)
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
View(a)
str(a)
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
a
oder(a)
order(a)
View(mergedmyfile)
a
mergeedmyfile[mergedmyfile$Income.Group="High income: nonOECD"]
mergeedmyfile[mergedmyfile$Income.Group=="High income: nonOECD"]
mergedmyfile[mergedmyfile$Income.Group=="High income: nonOECD"]
mergedmyfile[mergedmyfile$Income.Group=="High income: nonOECD",]
mergedmyfile[mergedmyfile$Income.Group=="High income: OECD",]
View(myfile2)
View(myfile1)
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
View(myfile1)
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
View(myfile1)
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
View(mergedmyfile)
mergedmyfile[mergedmyfile$Income.Group=="High income: OECD",]
View(mergedmyfile)
mergedmyfile[mergedmyfile$Income.Group=="High income: OECD","X.1"]
mergedmyfile[mergedmyfile$Income.Group=="High income: nonOECD","X.1"]
summary(mergedmyfile[mergedmyfile$Income.Group=="High income: nonOECD","X.1"])
summary(mergedmyfile[mergedmyfile$Income.Group=="High income: OECD","X.1"])
quantile(mergedmyfile$X.1,probs=c(.2,.4,.6,.8))
quantile(mergedmyfile$X.1,probs=c(.2,.4,.6,.8),na.rm=TRUE)
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
names(myfile)
?strsplit
strsplit(names(myfile))
strsplit(names(myfile),"wgtp")
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
myfile
myfile[,myfile$X.3]
myfile[,myfile$"X.3"]
str(myfile)
myfile[,"X.3"]
as.numeric(gsub(",","", myfile[,"X.3"]))
myfile[,"X.3" na.rm=TRUE]
gsub(",","", myfile[,"X.3"])
gsub(",","", myfile[,"X.3"])
View(myfile)
?grep
?gsub
as.numeric(gsub(",","", is.number(myfile[,"X.3"]))
k
as.numeric(gsub(",","", is.number(myfile[,"X.3"]))
k
as.numeric(gsub(",","", is.number(myfile[,"X.3"])))
as.numeric(gsub(",","", is.numeric(myfile[,"X.3"])))
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
a <- sapply(gsub(",","", myfile[,"X.3"]),is.numeric)
a
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
a
average(a)
class(a)
myfile[sapply(gsub(",","", myfile[,"X.3"]),is.numeric),"X.3"]
gsub(",","",myfile[sapply(gsub(",","", myfile[,"X.3"]),is.numeric),"X.3"])
a <-gsub(",","",myfile[sapply(gsub(",","", myfile[,"X.3"]),is.numeric),"X.3"])
a
myfile[sapply(gsub(",","", myfile[,"X.3"]),is.numeric),"X.3"]
a <- myfile[sapply(gsub(",","", myfile[,"X.3"]),is.numeric),"X.3"]
a
class(a)
View(myfile)
a <- as.data.frame(myfile[sapply(gsub(",","", myfile[,"X.3"]),is.numeric),"X.3"])
a
View(a)
a <- myfile[sapply(gsub(",","", myfile[,"X.3"]),is.numeric),"X.3"]
a
View(myfile)
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
class(sampleTimes)
sampleTimes[1]
sampleTimes[,1]
sampleTimes[sampleTimes>2012]
sampleTimes[sampleTimes>=2012-01-01&sampleTimes=<2012-12-31]
sampleTimes[sampleTimes>2012-01-01&sampleTimes<2012-12-31]
sampleTimes[1]
sampleTimes[2]
weekdays(sampleTimes)
class(sampleTimes)
class(sampleTimes[1])
year(sampleTimes)
y(sampleTimes)
format(sampleTimes,%Y)
format(sampleTimes,"%Y")
a <- as.data.frame(sampleTimes)
a
a$year <- format(sampleTimes,"%Y")
a$weekday <- weekdays(sampleTimes)
a
summary(a)
table(a)
str(a)
head(a)
b <- xtabs(Freqs ~ year + weekday, data=a)
b <- xtabs(Freq ~ year + weekday, data=a)
?xtabs
b <- xtabs(~ year + weekday, data=a)
b
b <- xtabs(~ year, data=a)
b
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
b
source('~/Documents/Coursera/Data Science/code/GettingAndCleaningDataWeek1Quiz1.R')
b
c
install.packages("multicore")
par()?
\
?par()
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
summary(temp)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
## check if data exists, else download and unzip
if(!file.exists("./data/summarySCC_PM25.rds")){
if(!file.exists("./data")){dir.create("data")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
download.file(fileUrl, destfile = "./data/PM25.zip")
unzip("./data/PM25.zip",exdir="./data")
unlink("./data/PM25.zip");
}
PM25EmissionData <- readRDS("./data/summarySCC_PM25.rds") ## read in data
totalEmmisionPerYear <- tapply(PM25EmissionData$Emissions, PM25EmissionData$year,sum) ## sum emission over year
if(!file.exists("./figures")){dir.create("figures")} ## create figure dir, if !exist
## save barplot png
png("./figures/plot1.png")
barplot(totalEmmisionPerYear/1000000,ylab="PM2.5 emission (in million ton)",xlab="year",
main="Total Emission of PM2.5 over the years USA", col = "red",ylim=c(0,8))
dev.off()
source('~/Documents/git/ExData_Assignment2/plot1.R')
source('~/Documents/git/ExData_Assignment2/plot1.R')
source('~/Documents/git/ExData_Assignment2/plot1.R')
source('~/Documents/git/ExData_Assignment2/plot2.R')
source('~/Documents/git/ExData_Assignment2/plot3.R')
source('~/Documents/git/ExData_Assignment2/plot3.R')
source('~/Documents/git/ExData_Assignment2/plot4.R')
source('~/Documents/git/ExData_Assignment2/plot5.R')
source('~/Documents/git/ExData_Assignment2/plot6.R')
source('~/Documents/git/ExData_Assignment2/plot6.R')
setwd("~/Documents/git/ExData_Assignment2")
if(!file.exists("./data/summarySCC_PM25.rds")){
if(!file.exists("./data")){dir.create("data")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
download.file(fileUrl, destfile = "./data/PM25.zip", method="curl")
unzip("./data/PM25.zip",exdir="./data")
unlink("./data/PM25.zip");
}
PM25EmissionData <- readRDS("./data/summarySCC_PM25.rds") ## read in data
PM25Baltimore <- PM25EmissionData[PM25EmissionData$fips==24510,] ## baltimore - subset data
PM25Baltimore$year <- factor(PM25Baltimore$year) ## factors: set year and type
PM25Baltimore$type <- factor(PM25Baltimore$type)
require(ggplot2)
require(grid)
g <- ggplot(PM25Baltimore,aes(x = year, y = Emissions)) ## start ggplot function
png("./figures/plot3.png", width=1000,height=480)
g + geom_bar(stat = "identity") + facet_grid(.~type) +
ggtitle("PM2.5 emission in Baltimore through the years for each type of emission") +
theme(plot.title = element_text(face="bold",vjust=2)) +
theme(plot.margin = unit(c(1,1,1,0),"cm")) +
ylab("PM2.5 Emission (in tons)")
dev.off()
source('~/Documents/git/ExData_Assignment2/plot3.R')
source('~/Documents/git/ExData_Assignment2/plot3.R')
source('~/Documents/git/ExData_Assignment2/plot6.R')
PM25EmissionData <- readRDS("./data/summarySCC_PM25.rds") ## read data in
mapping <- readRDS("./data/Source_Classification_Code.rds") ## read data in
SCCVehicles <-  as.character(mapping$SCC[grepl("Vehicles",mapping$EI.Sector)]) ## find all SCC-values for vehicle related sources
VehiclesIndex <- PM25EmissionData$SCC %in% SCCVehicles ## find indices of the SCC-values in the emission data
PM25Vehicles <- PM25EmissionData[VehiclesIndex,] ## subset all the vehicles related sources in the data
baltAndLAVehicles <- PM25Vehicles[(PM25Vehicles$fips=="24510"|PM25Vehicles$fips=="06037"),] ## subset data to only consist of data from Baltimore and Los Angeles
baltAndLAVehicles$fips <- factor(baltAndLAVehicles$fips, labels=c("Los Angeles", "Baltimore")) ## set year and fips as factor with correct labels
baltAndLAVehicles$year <- factor(baltAndLAVehicles$year)
require(ggplot2)
require(grid)
g <- ggplot(baltAndLAVehicles,aes(x = year, y = Emissions)) ## setup ggplot with correct aesthetics
png("./figures/plot6.png", width=1200, height=480)
g + geom_bar(stat = "identity") + facet_grid(.~fips) + ggtitle("Trend of vehicle PM2.5 emission in Baltimore and Los Angeles") +
theme(plot.title = element_text(face="bold", vjust=2)) + theme(plot.margin = unit(c(1,1,1,0), "cm")) + ylab("PM2.5 Emission (in tons)")
dev.off()
g <- ggplot(baltAndLAVehicles,aes(x = year, y = Emissions)) ## setup ggplot with correct aesthetics
png("./figures/plot6.png", width=1600, height=480)
g + geom_bar(stat = "identity") + facet_grid(.~fips) + ggtitle("Trend of vehicle PM2.5 emission in Baltimore and Los Angeles") +
theme(plot.title = element_text(face="bold", vjust=2)) + theme(plot.margin = unit(c(1,1,1,0), "cm")) + ylab("PM2.5 Emission (in tons)")
dev.off()
png("./figures/plot6.png", width=1600, height=600)
g + geom_bar(stat = "identity") + facet_grid(.~fips) + ggtitle("Trend of vehicle PM2.5 emission in Baltimore and Los Angeles") +
theme(plot.title = element_text(face="bold", vjust=2)) + theme(plot.margin = unit(c(1,1,1,0), "cm")) + ylab("PM2.5 Emission (in tons)")
dev.off()
png("./figures/plot6.png", width=1800, height=600)
g + geom_bar(stat = "identity") + facet_grid(.~fips) + ggtitle("Trend of vehicle PM2.5 emission in Baltimore and Los Angeles") +
theme(plot.title = element_text(face="bold", vjust=2)) + theme(plot.margin = unit(c(1,1,1,0), "cm")) + ylab("PM2.5 Emission (in tons)")
dev.off()
png("./figures/plot6.png", width=2400, height=1200)
g + geom_bar(stat = "identity") + facet_grid(.~fips) + ggtitle("Trend of vehicle PM2.5 emission in Baltimore and Los Angeles") +
theme(plot.title = element_text(face="bold", vjust=2)) + theme(plot.margin = unit(c(1,1,1,0), "cm")) + ylab("PM2.5 Emission (in tons)")
dev.off()
source('~/Documents/git/ExData_Assignment2/plot6.R')
source('~/Documents/git/ExData_Assignment2/plot3.R')
PM25EmissionData <- readRDS("./data/summarySCC_PM25.rds") ## read in data
PM25Baltimore <- PM25EmissionData[PM25EmissionData$fips==24510,] ## baltimore - subset data
PM25Baltimore$year <- factor(PM25Baltimore$year) ## factors: set year and type
PM25Baltimore$type <- factor(PM25Baltimore$type)
require(ggplot2)
require(grid)
g <- ggplot(PM25Baltimore,aes(x = year, y = Emissions)) ## start ggplot function
## save barplot ggplot png, with seperate plots for type
png("./figures/plot3.png", width=1200, height=480)
g + geom_bar(stat = "identity") + facet_grid(.~type) + ggtitle("PM2.5 emission in Baltimore through the years for each type of emission") +
theme(plot.title = element_text(face="bold", vjust=2)) + theme(plot.margin = unit(c(1,1,1,0),"cm")) + ylab("PM2.5 Emission (in tons)")
dev.off()
PM25EmissionData <- readRDS("./data/summarySCC_PM25.rds") ## read data in
mapping <- readRDS("./data/Source_Classification_Code.rds") ## read data in
SCCVehicles <-  as.character(mapping$SCC[grepl("Vehicles",mapping$EI.Sector)]) ## find all SCC-values for vehicle related sources
VehiclesIndex <- PM25EmissionData$SCC %in% SCCVehicles ## find indices of the SCC-values in the emission data
PM25Vehicles <- PM25EmissionData[VehiclesIndex,] ## subset all the vehicles related sources in the data
baltAndLAVehicles <- PM25Vehicles[(PM25Vehicles$fips=="24510"|PM25Vehicles$fips=="06037"),] ## subset data to only consist of data from Baltimore and Los Angeles
baltAndLAVehicles$fips <- factor(baltAndLAVehicles$fips, labels=c("Los Angeles", "Baltimore")) ## set year and fips as factor with correct labels
baltAndLAVehicles$year <- factor(baltAndLAVehicles$year)
require(ggplot2)
require(grid)
g <- ggplot(baltAndLAVehicles,aes(x = year, y = Emissions)) ## setup ggplot with correct aesthetics
## save png ggplot barplot with different plots for the different cities (fips)
png("./figures/plot6.png", width=2400, height=1200)
g + geom_bar(stat = "identity") + facet_grid(.~fips) + ggtitle("Trend of vehicle PM2.5 emission in Baltimore and Los Angeles") +
theme(plot.title = element_text(face="bold", vjust=2)) + theme(plot.margin = unit(c(1,1,1,0), "cm")) + ylab("PM2.5 Emission (in tons)")
dev.off()
## save png ggplot barplot with different plots for the different cities (fips)
png("./figures/plot6.png", width=1200, height=600)
g + geom_bar(stat = "identity") + facet_grid(.~fips) + ggtitle("Trend of vehicle PM2.5 emission in Baltimore and Los Angeles") +
theme(plot.title = element_text(face="bold", vjust=2)) + theme(plot.margin = unit(c(1,1,1,0), "cm")) + ylab("PM2.5 Emission (in tons)")
dev.off()
source('~/Documents/git/ExData_Assignment2/plot6.R')
